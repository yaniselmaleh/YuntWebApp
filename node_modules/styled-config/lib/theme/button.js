"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.button = void 0;

var _colors = require("./colors");

var _utils = require("./utils");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var button = {
  colors: {
    primary: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.blue,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonPrimaryBackgroundColor,
      backgroundColorDisabled: _colors.colors.blue,
      backgroundColorHoverFocus: _colors.colors.buttonPrimaryHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.blueHoverFocus,
      borderColor: _colors.colors.blue,
      borderColorDisabled: _colors.colors.blue,
      borderColorActive: _colors.colors.buttonPrimaryActiveBorderColor,
      borderColorHoverFocus: _colors.colors.blueHoverFocus,
      boxShadow: _colors.colors.blueBoxShadow
    },
    secondary: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.gray,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonSecondaryBackgroundColor,
      backgroundColorDisabled: _colors.colors.gray,
      backgroundColorHoverFocus: _colors.colors.buttonSecondaryHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.grayHoverFocus,
      borderColor: _colors.colors.gray,
      borderColorDisabled: _colors.colors.gray,
      borderColorActive: _colors.colors.buttonSecondaryActiveBorderColor,
      borderColorHoverFocus: _colors.colors.grayHoverFocus,
      boxShadow: _colors.colors.grayBoxShadow
    },
    success: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.green,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonSuccessBackgroundColor,
      backgroundColorDisabled: _colors.colors.green,
      backgroundColorHoverFocus: _colors.colors.buttonSuccessHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.greenHoverFocus,
      borderColor: _colors.colors.green,
      borderColorDisabled: _colors.colors.green,
      borderColorActive: _colors.colors.buttonSuccessActiveBorderColor,
      borderColorHoverFocus: _colors.colors.greenHoverFocus,
      boxShadow: _colors.colors.greenBoxShadow
    },
    danger: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.red,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonDangerBackgroundColor,
      backgroundColorDisabled: _colors.colors.red,
      backgroundColorHoverFocus: _colors.colors.buttonDangerHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.redHoverFocus,
      borderColor: _colors.colors.red,
      borderColorDisabled: _colors.colors.red,
      borderColorActive: _colors.colors.buttonDangerActiveBorderColor,
      borderColorHoverFocus: _colors.colors.redHoverFocus,
      boxShadow: _colors.colors.redBoxShadow
    },
    warning: {
      color: _colors.colors.gray900,
      colorOutline: _colors.colors.yellow,
      colorOutlineHover: _colors.colors.gray900,
      backgroundColor: _colors.colors.buttonWarningBackgroundColor,
      backgroundColorDisabled: _colors.colors.yellow,
      backgroundColorHoverFocus: _colors.colors.buttonWarningHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.yellowHoverFocus,
      borderColor: _colors.colors.yellow,
      borderColorDisabled: _colors.colors.yellow,
      borderColorActive: _colors.colors.buttonWarningActiveBorderColor,
      borderColorHoverFocus: _colors.colors.yellowHoverFocus,
      boxShadow: _colors.colors.yellowBoxShadow
    },
    info: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.cyan,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonInfoBackgroundColor,
      backgroundColorDisabled: _colors.colors.cyan,
      backgroundColorHoverFocus: _colors.colors.buttonInfoHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.cyanHoverFocus,
      borderColor: _colors.colors.cyan,
      borderColorDisabled: _colors.colors.cyan,
      borderColorActive: _colors.colors.buttonInfoActiveBorderColor,
      borderColorHoverFocus: _colors.colors.cyanHoverFocus,
      boxShadow: _colors.colors.cyanBoxShadow
    },
    light: {
      color: _colors.colors.gray900,
      colorOutline: _colors.colors.gray100,
      colorOutlineHover: _colors.colors.gray900,
      backgroundColor: _colors.colors.buttonLightBackgroundColor,
      backgroundColorDisabled: _colors.colors.gray100,
      backgroundColorHoverFocus: _colors.colors.buttonLightHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.gray100HoverFocus,
      borderColor: _colors.colors.gray100,
      borderColorDisabled: _colors.colors.gray100,
      borderColorActive: _colors.colors.buttonLightActiveBorderColor,
      borderColorHoverFocus: _colors.colors.gray100HoverFocus,
      boxShadow: _colors.colors.gray100BoxShadow,
      toggle: {
        color: _colors.colors.navbarLightColor,
        borderColor: _colors.colors.navbarLightBorderColor,
        colorHoverFous: _colors.colors.navbarLightColor,
        borderColorHoverFous: _colors.colors.navbarLightBorderColor
      }
    },
    dark: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.gray800,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonDarkBackgroundColor,
      backgroundColorDisabled: _colors.colors.gray800,
      backgroundColorHoverFocus: _colors.colors.buttonDarkHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.gray800HoverFocus,
      borderColor: _colors.colors.gray800,
      borderColorDisabled: _colors.colors.gray800,
      borderColorActive: _colors.colors.buttonDarkActiveBorderColor,
      borderColorHoverFocus: _colors.colors.gray800HoverFocus,
      boxShadow: _colors.colors.gray800BoxShadow,
      toggle: {
        color: _colors.colors.navbarDarkColor,
        borderColor: _colors.colors.navbarDarkBorderColor,
        colorHoverFous: _colors.colors.navbarDarkColor,
        borderColorHoverFous: _colors.colors.navbarDarkBorderColor
      }
    },
    default: {
      color: _colors.colors.white,
      colorOutline: _colors.colors.gray,
      colorOutlineHover: _colors.colors.white,
      backgroundColor: _colors.colors.buttonSecondaryBackgroundColor,
      backgroundColorDisabled: _colors.colors.gray,
      backgroundColorHoverFocus: _colors.colors.buttonSecondaryHoverFocusBackgroundColor,
      backgroundColorActive: _colors.colors.grayHoverFocus,
      borderColor: _colors.colors.gray,
      borderColorDisabled: _colors.colors.gray,
      borderColorActive: _colors.colors.buttonSecondaryActiveBorderColor,
      borderColorHoverFocus: _colors.colors.grayHoverFocus,
      boxShadow: _colors.colors.grayBoxShadow
    }
  },
  margin: {
    blockTop: '0.5rem',
    dropDownToggleLeft: '0255rem'
  },
  padding: _objectSpread({}, _utils.utils.padding.button, {
    splitSmRight: '0.375rem',
    splitSmLeft: '0.375rem',
    splitLgRight: '0.75rem',
    splitLgLeft: '0.75rem',
    splitDefaultRight: '0.5625rem',
    splitDefaultLeft: '0.5625rem'
  }),
  fontSize: _objectSpread({}, _utils.utils.fontSize, {
    toggle: '1.25rem'
  }),
  border: _utils.utils.border,
  borderRadius: _utils.utils.borderRadius
};
exports.button = button;